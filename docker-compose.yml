version: '3.8'

services:
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      # Lee las credenciales desde el archivo .env
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      # Lee el puerto desde el archivo .env
      - '${BACKEND_PORT:-8080}:${BACKEND_PORT:-8080}' # El :-8080 es un valor por defecto si la variable no existe
    depends_on:
      - db
    environment:
      # Construye la URL de conexión usando las variables del .env
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # Estas URLs también podrían estar en el .env si quieres
      FRONTEND_URL: http://localhost:3000
      ADMIN_URL: http://localhost:3001
      PORT: ${BACKEND_PORT:-8080}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:${BACKEND_PORT:-8080}

  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    restart: always
    ports:
      - '3001:3001'
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:${BACKEND_PORT:-8080}

volumes:
  postgres_data:
